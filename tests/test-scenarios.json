{
  "canned-requests": [
    { "name": "create-photo-item",
      "method": "upload-via-put",
      "request-parameters": {
        "{item-path}": "!random-filename-png",
        "!body.base64": "iVBORw0KGgoAAAANSUhEUgAAAAUAAAAFCAYAAACNbyblAAAAHElEQVQI12P4//8/w38GIAXDIBKE0DHxgljNBAAO9TXL0Y4OHwAAAABJRU5ErkJggg=="
      },
      "capture": {
        "[item-id]": "$.id"
      },
      "implicit-variable": "{photo-item-id}"
    },
    { "name": "create-file-item",
      "method": "upload-via-put",
      "request-parameters": {
        "{item-path}": "!random-filename-txt",
        "!body": "This is a test file generated by markdown-scanner. See https://github.com/onedrive/markdown-scanner for more details.",
        "Content-Type:": "application/octet-stream"
      },
      "capture": {
        "[item-id]": "$.id"
      },
      "implicit-variable": "{file-item-id}"
    },

    { "name": "create-folder-item",
      "method": "create-folder",
      "request-parameters": {
        "$.name": "!random-filename!"
      },
      "capture": {
        "[item-id]": "$.id"
      },
      "implicit-variable": "{folder-item-id}"
    }
  ],
  "scenarios":
  [
    { "name": "Get default drive",
      "method": "get-default-drive",
      "enabled": true
    },

    {
      "method": "template-method-name",
      "enabled": false,
      "name": "Template method test"
    },
    
    { "name": "Get drive by drive ID",
      "method": "get-drive-by-id",
      "enabled": true,
      "test-setup": [
        {
          "method": "get-default-drive",
          "capture":
          {
            "[read-drive-id]": "$.id"
          }
        }
      ],
      "request-parameters":
      {
        "{drive-id}": "[read-drive-id]"
      },
      "expectations":
      {
        "$.driveType": ["personal", "business"]
      }
    },

    { "name": "Copy file to new filename",
      "method": "copy-item",
      "enabled": true,
      "request-parameters":
      {
        "{item-id}": "[item-id]",
        "$.parentReference.id": null,
        "$.name": "!random-filename-txt"
      },
      "test-setup": [ { "canned-request": "create-file-item" } ]
    },

    { "name": "Copy file and replace",
      "method": "copy-item",
      "enabled": true,
      "scopes": ["service.onedrive"],
      "request-parameters":
      {
        "{item-id}": "[item-id]",
        "$.parentReference.id": null,
        "$.parentReference.path": "/drive/root:/Documents",
        "$.name": "foobar.txt",
        "$.['@microsoft.graph.conflictBehavior']": "replace"
      },
      "test-setup": [
         { "canned-request": "create-file-item" }
       ]
    },


    { "name": "Get first medium thumbnail",
      "method": "get-one-thumbnail",
      "enabled": false,
      "request-parameters":
      {
        "{item-id}": "[item-id]",
        "{thumb-id}": "0",
        "{size}": "medium"
      },
      "test-setup": [ { "canned-request": "create-photo-item" } ],
      "status-codes-to-retry": [404]
    },

    { "name": "Expand thumbnails on root",
      "method": "get-many-thumbnails",
      "enabled": true,
      "request-parameters":
      {
        "{item-id}": "root"
      }
    },

    { "name": "Enumerate thumbnails for photo folder",
      "method": "enum-item-thumbnails",
      "scopes": ["service.onedrive"],
      "enabled": true,

      "request-parameters":
      {
        "{item-id}": "[folder-item-id]"
      },
      "test-setup":
      [
        {
          "http-request": "GET /drive/special/photos",
          "capture": {
            "[folder-item-id]": "$.id"
          }
        },
        {
          "http-request": "PUT /drive/special/photos:{filename}:/content",
          "request-parameters": {
            "{filename}": "!random-filename-png",
            "!body.base64": "iVBORw0KGgoAAAANSUhEUgAAAAUAAAAFCAYAAACNbyblAAAAHElEQVQI12P4//8/w38GIAXDIBKE0DHxgljNBAAO9TXL0Y4OHwAAAABJRU5ErkJggg=="
          }
        }
      ]
    },

    { "name": "Enumerate thumbnails for a photo",
      "method": "enum-item-thumbnails",
      "enabled": false,

      "request-parameters":
      {
        "{item-id}": "[item-id]"
      },
      "test-setup": [ { "canned-request": "create-photo-item" } ]
    },



    { "name": "Download large item thumbnail",
      "method": "get-thumbnail-content",
      "enabled": false,
      "status-codes-to-retry": [ 404 ],

      "request-parameters":
      {
        "{item-id}": "[item-id]",
        "{thumb-id}": "0",
        "{size}": "large"

      },
      "test-setup": [ { "canned-request": "create-photo-item" } ]
    },

    { "name": "Find items with 2014 in the keywords",
      "method": "search-at-root",
      "enabled": true,

      "request-parameters":
      {
        "{search-text}": "2014"
      }
    },

    { "name": "Add custom thumbnail to non-image file",
      "method": "add-custom-thumbnail",
      "enabled": true,

      "test-setup": [ { "canned-request": "create-file-item" } ],

      "request-parameters": {
        "{item-id}": "[item-id]",
        "!body.base64": "iVBORw0KGgoAAAANSUhEUgAAAAUAAAAFCAYAAACNbyblAAAAHElEQVQI12P4//8/w38GIAXDIBKE0DHxgljNBAAO9TXL0Y4OHwAAAABJRU5ErkJggg=="
      }
    },

    { "name": "Get custom thumbnail size",
      "method": "get-thumbnail-custom-size",
      "enabled": true,

      "test-setup": [ { "canned-request": "create-photo-item" } ],

      "request-parameters": {
        "{item-id}": "[item-id]"
      }
    },

    { "name": "Get root folder changes",
      "method": "get-changes",
      "enabled": true,

      "request-parameters":
      {
        "{item-id}": "root",
        "{token}": "a"
      }
    },

    { "name": "Get latest sync token for root",
      "method": "get-changes-latest",
      "enabled": true,

      "request-parameters":
      {
        "{item-id}": "root"
      }
    },

    { "name": "Delete a Folder",
      "method": "delete-item",
      "enabled": true,

      "request-parameters":
      {
        "{item-id}": "[item-id]"
      },
      "test-setup": [ { "canned-request": "create-folder-item" } ]
    },

    { "name": "Get a list of available thumbnails",
      "method": "expand-thumbnails",
      "enabled": true,

      "request-parameters":
      {
        "{item-id}": "[item-id]"
      },
      "test-setup": [ { "canned-request": "create-photo-item" } ]
    },
    { "name": "Select custom source thumbnail",
      "method": "get-custom-thumbnail",
      "enabled": true,

      "request-parameters":
      {
        "{item-id}": "[item-id]"
      },
      "test-setup": [ { "canned-request": "create-photo-item" } ]
    },

    { "name": "Upload new file to folder named pictures",
      "method": "upload-via-put",
      "enabled": true,

      "request-parameters":
      {
        "{item-path}": "/pictures/newfile.txt"
      },
      "test-setup":
      [
        {
          "method": "delete-item",
          "request-parameters": {
            "{item-id}": "root:/pictures/newfile.txt"
          },
          "allowed-status-codes": [204, 404]
        }
      ]
    },

    { "name": "Download a text file",
      "method": "download-item-content",
      "enabled": true,

      "request-parameters": { "{item-id}": "[item-id]" },
      "test-setup": [ { "canned-request": "create-file-item" } ]
    },

    { "name": "Documents folder",
      "method": "get-special-folder",
      "enabled": true,
      "scopes": ["service.onedrive"],
      "request-parameters":
      {
        "{special-folder-name}": "documents"
      }
    },

    { "name": "Photos folder",
      "method": "get-special-folder",
      "enabled": true,
      "request-parameters":
      {
        "{special-folder-name}": "photos"
      }
    },

    { "name": "Camera Roll folder",
      "method": "get-special-folder",
      "enabled": true,
      "request-parameters":
      {
        "{special-folder-name}": "cameraroll"
      },
      "test-setup":
      [
        {
          "http-request": "PUT /drive/special/cameraroll:{filename}:/content",
          "request-parameters": {
            "{filename}": "!random-filename-png",
            "!body.base64": "iVBORw0KGgoAAAANSUhEUgAAAAUAAAAFCAYAAACNbyblAAAAHElEQVQI12P4//8/w38GIAXDIBKE0DHxgljNBAAO9TXL0Y4OHwAAAABJRU5ErkJggg=="
          }
        }
      ]
    },

    {
      "name": "Application folder",
      "method": "get-special-folder",
      "enabled": true,
      "request-parameters":
      {
        "{special-folder-name}": "approot"
      }
    },

    { "name": "Documents folder",
      "method": "get-special-children",
      "enabled": true,
      "request-parameters":
      {
        "{special-folder-name}": "documents"
      }
    },

    { "name": "Photos folder",
      "method": "get-special-children",
      "enabled": true,
      "request-parameters":
      {
        "{special-folder-name}": "photos"
      }
    },

    { "name": "Camera Roll folder",
      "method": "get-special-children",
      "enabled": true,
      "request-parameters":
      {
        "{special-folder-name}": "cameraroll"
      }
    },

    { "name": "Public folder",
      "method": "get-special-children",
      "enabled": true,
      "scopes": ["service.onedrive"],
      "request-parameters":
      {
        "{special-folder-name}": "public"
      }
    },

    { "name": "Application folder",
      "method": "get-special-children",
      "enabled": true,
      "request-parameters":
      {
        "{special-folder-name}": "approot"
      },
      "test-setup":
      [
        {
          "http-request": "PUT /drive/special/approot:{filename}:/content",
          "request-parameters": {
            "{filename}": "!random-filename-png",
            "!body.base64": "iVBORw0KGgoAAAANSUhEUgAAAAUAAAAFCAYAAACNbyblAAAAHElEQVQI12P4//8/w38GIAXDIBKE0DHxgljNBAAO9TXL0Y4OHwAAAABJRU5ErkJggg=="
          }
        }
      ]
    },

	{
      "name": "Set up for testing that HEAD doesn't auto-provision special folders",
      "method": "head-does-not-create-special-folder",
      "enabled": true,
      "request-parameters": {
         "{special-folder-name}": "approot"
       },
      "test-setup": [
        {
          "http-request": "DELETE /drive/special/approot",
          "allowed-status-codes": [
            204,
            404
          ]
        }
      ]
    },

    { "name": "Set up to test that HEAD works on existing special folders",
      "method": "head-existing-special-folder",
      "enabled": true,
      "request-parameters": {
        "{special-folder-name}": "approot"
      },
      "test-setup": [
		    {
          "http-request": "GET /drive/special/approot",
          "allowed-status-codes": [ 200 ]
        }
      ]
    },

    {
      "name": "Create ApiTestTool folder",
      "method": "create-folder",
      "enabled": true,
      "request-parameters":
      {
        "$.name": "ApiTestTool"
      },
      "test-setup":
      [
        {
          "method": "delete-item",
          "request-parameters": {
            "{item-id}": "root:/ApiTestTool"
          },
          "allowed-status-codes": [204, 404]
        }
      ]
    },

    {
      "name": "Create folder with conflict behavior",
      "method": "create-folder",
      "enabled": true,
      "scopes": ["service.onedrive"],
      "request-parameters": {
        "$.['@microsoft.graph.conflictBehavior']": "rename"
      }
    },

    {
      "name": "Move file to documents folder",
      "method": "move-item",
      "enabled": true,

      "request-parameters":
      {
        "{item-id}": "[item-id]"
      },

      "test-setup":
      [
        { "canned-request": "create-file-item" }
      ]
    },

    {
      "name": "Move folder from root to Documents folder",
      "method": "update-item-move-folder",
      "enabled": true,
      "request-parameters":
      {
        "{item-id}": "[item-id]"
      },
      "test-setup":
      [
        {
          "method": "delete-item",
          "request-parameters": { "{item-id}": "root:/documents/newFolderName"  },
          "allowed-status-codes": [204, 404]
        },
        {
          "method": "create-folder",
          "request-parameters": { "$.name": "newFolderName" },
          "capture": { "[item-id]": "$.id" }
        }
      ]
    },

    {
      "name": "Multipart upload into a children collection",
      "method": "upload-multipart",
      "enabled": true,

      "request-parameters":
      {
        "{folder-id}": "[new-folder-id]"
      },

      "test-setup":
      [
        {
          "method": "delete-item",
          "request-parameters": { "{item-id}": "root:/multipart_upload_test" },
          "allowed-status-codes": [204, 404]
        },
        {
          "method": "create-folder",
          "request-parameters": { "$.name": "multipart_upload_test" },
          "capture": { "[new-folder-id]": "$.id" }
        }
      ]
    },

    {
      "name": "Upload a file from URL",
      "method": "upload-from-url",
      "enabled": true,
      "request-parameters":
      {
        "{parent-item}": "root:/pictures:"
      }
    },

    {
      "name": "Create a sharing link for an item",
      "method": "create-link",
      "enabled": true,

      "request-parameters":
      {
        "{item-id}": "[new-item-id]"
      },

      "test-setup":
      [
        {
          "method": "delete-item",
          "request-parameters": { "{item-id}": "root:/Documents/sharedfile.txt" },
          "allowed-status-codes": [204, 404]
        },
        {
          "method": "upload-via-put",
          "request-parameters": {
            "{item-path}": "/Documents/sharedfile.txt",
            "!body": "Test file that we will share"
          },
          "capture": { "[new-item-id]": "$.id" }
        }
      ]
    },

    {
      "name": "Get list of items shared with me",
      "method": "shared-with-me",
      "enabled": true
    },

    {
      "name": "Enumerate an item's permissions",
      "method": "get-item-permissions",
      "enabled": true,

      "request-parameters":
      {
        "{item-id}": "[item-id]"
      },

      "test-setup":
      [
        { "canned-request": "create-file-item" },
        {
          "method": "create-link",
          "request-parameters": {
              "{item-id}": "[item-id]"
          },
          "capture": {
            "[perm-id]": "$.id"
          }
        }
      ],
      "expectations": {
        "$.value[0].link.type": "view",
        "$.value[0].roles[0]": "read"
      }
    },

    {
      "name": "Delete an item's permissions",
      "method": "delete-permission",
      "enabled": true,

      "request-parameters":
      {
        "{item-id}": "[item-id]",
        "{permission-id}": "[perm-id]"
      },

      "test-setup":
      [
        { "canned-request": "create-file-item" },
        {
          "method": "create-link",
          "request-parameters": {
              "{item-id}": "[item-id]"
          },
          "capture": {
            "[perm-id]": "$.id"
          }
        }
      ]
    },

    { "name": "Get single permission on item",
      "method": "get-single-permission",
      "enabled": true,

      "request-parameters": {
        "{item-id}": "[item-id]",
        "{permission-id}": "[perm-id]"
      },

      "test-setup": [
        { "canned-request": "create-file-item" },
        {
          "method": "create-link",
          "request-parameters": {
              "{item-id}": "[item-id]"
          },
          "capture": {
            "[perm-id]": "$.id"
          }
        }
      ]
    },

    {
      "name": "Change read-only to read-write permissions",
      "method": "update-permission",
      "enabled": true,
      "scopes":["service.onedrive"],

      "request-parameters":
      {
        "{item-id}": "[item-id]",
        "{permission-id}": "[perm-id]"
      },
      "expectations": {
        "$.roles[0]": "read"
      },

      "test-setup":
      [
        { "canned-request": "create-file-item" },
        {
          "method": "create-link",
          "request-parameters": {
              "{item-id}": "[item-id]",
              "$.type": "edit"
          },
          "capture": {
            "[perm-id]": "$.id"
          }
        }
      ]
    },

    {
      "name": "Create a chunked upload session",
      "method": "upload-fragment-create-session",
      "enabled": true,

      "request-parameters":
      {
        "{item-path}": "!random-filename-vnd!",
        "$.item.name": null
      }
    },

    {
      "name": "Upload a file fragment",
      "method": "upload-fragment-piece",
      "enabled": true,
      "request-parameters":
      {
        "!url": "[upload-url]"
      },
      "test-setup":
      [
        {
          "method": "upload-fragment-create-session",
          "request-parameters": { "{item-path}": "!random-filename-txt!", "$.item.name": null },
          "capture": {  "[upload-url]": "$.uploadUrl" }
        }
      ]
    },

    {
      "name": "Cancel a chunked upload session",
      "method": "upload-fragment-cancel",
      "enabled": true,

      "request-parameters":
      {
        "!url": "[upload-url]"
      },
      "test-setup":
      [
        {
          "method": "upload-fragment-create-session",
          "request-parameters": { "{item-path}": "!random-filename-txt!", "$.item.name": null },
          "capture":
          {
            "[upload-url]": "$.uploadUrl"
          }
        }
      ]
    },


    {
      "name": "Resume a chunked upload session",
      "method": "upload-fragment-resume",
      "enabled": true,
      "request-parameters":
      {
        "!url": "[upload-url]"
      },
      "test-setup":
      [
        {
          "method": "upload-fragment-create-session",
          "request-parameters": { "{item-path}": "!random-filename-txt!", "$.item.name": null },
          "capture": { "[upload-url]": "$.uploadUrl" }
        }
      ]
    },


    {
      "name": "Upload a file fragment",
      "method": "upload-fragment-final",
      "enabled": true,
      "request-parameters":
      {
        "!url": "[upload-url]"
      },
      "allowed-status-codes": [201, 200],
      "test-setup":
      [
        {
          "method": "upload-fragment-create-session",
          "request-parameters": { "{item-path}": "!random-filename-txt!", "$.item.name": null },
          "capture":
          {
            "[upload-url]": "$.uploadUrl"
          }
        },
        {
          "http-request": "PUT {upload-url}\r\nContent-Type: application/octet-stream\r\nContent-Range: bytes 0-100/128\r\n\r\nuuuuupppppllllloooooaaaaaddddduuuuupppppllllloooooaaaaaddddduuuuupppppllllloooooaaaaaddddd!!!!!!!!!",
          "request-parameters":
          {
            "!url": "[upload-url]"
          }
        }
      ]
    },

    {
      "name": "View MRU list",
      "method": "view-recent-files",
      "enabled": true,
      "test-setup":
      [
        {
          "http-request": "PUT /drive/root:/Documents/vrmtest.docx:/content\r\nContent-Type: application/octet-stream\r\n\r\nTest file for the mru",
          "capture":
          {
            "[download-url]": "$.['@microsoft.graph.downloadUrl']"
          }
        },
        {
          "http-request": "GET {download-url}?mru=skydrive",
          "request-parameters":
          {
            "{download-url}": "[download-url]"
          }
        }
      ]
    },

    {
      "name": "Enumerate children of an empty folder",
      "method": "enumerate-empty-folder",
      "enabled": true,
      "request-parameters":
      {
        "{folder-name}": "[folder-name]"
      },
      "test-setup":
      [
        {
          "http-request": "DELETE /drive/root:/EmptyFolder",
          "allowed-status-codes": [204, 404]
        },
        {
          "http-request": "PUT /drive/root:/EmptyFolder\r\nContent-Type: application/json\r\n\r\n{\"folder\":{}}",
          "capture":
          {
            "[folder-name]": "$.name"
          }
        }
      ]
    }
    ,
    {
      "name": "Get an item's metadata",
      "method": "get-item-metadata",
      "enabled": true,
      "request-parameters":
      {
        "{item-id}": "[new-item-id]"
      },
      "test-setup":
      [
        {
          "http-request": "DELETE /drive/root:/Documents/sharedfile2.txt",
          "allowed-status-codes": [204, 404]
        },
        {
          "http-request": "PUT /drive/root:/Documents/sharedfile2.txt:/content\r\nContent-Type: application/octet-stream\r\n\r\nTest file that we will share",
          "capture":
          {
            "[new-item-id]": "$.id"
          }
        }
      ]
    }
    ,
    {
      "name": "Test expand option",
      "method": "expand-folder",
      "enabled": true,
      "test-setup":
      [
        {
          "http-request": "DELETE /drive/root:/Test/FolderWithChildren",
          "allowed-status-codes": [204, 404]
        },
        {
          "http-request": "PUT /drive/root:/Test/FolderWithChildren\r\nContent-Type: application/json\r\n\r\n{\"folder\":{}}"
        },
        {
          "http-request": "PUT /drive/root:/Test/FolderWithChildren/testfile.txt:/content\r\nContent-Type: application/octet-stream\r\n\r\nTest file for expand option"
        }
      ]
    }
    ,
    {
      "name": "Test select option",
      "method": "select-properties",
      "enabled": true,
      "request-parameters":
      {
        "{id}": "[id]"
      },
      "test-setup":
      [
        {
          "http-request": "DELETE /drive/root:/Test/FolderForSelect",
          "allowed-status-codes": [204, 404]
        },
        {
          "http-request": "PUT /drive/root:/Test/FolderForSelect/testfile.txt:/content\r\nContent-Type: application/octet-stream\r\n\r\nTest file for select option",
          "capture":
          {
            "[id]": "$.id"
          }
        }
      ]
    },
    {
      "name": "Upload to known folder",
      "method": "upload-via-put-id",
      "enabled": true,
      "request-parameters": {
          "{parent-id}": "[item-id]",
          "{filename}": "!random-filename-txt",
          "!body": "Test file that we will share"
      },
      "test-setup":[
        {
          "method": "get-special-folder",
          "request-parameters": {
            "{special-folder-name}": "documents"
          },
          "capture": { 
            "[item-id]": "$.id"
          }
        }
      ] 
        
      
        
      }
  ]
}
